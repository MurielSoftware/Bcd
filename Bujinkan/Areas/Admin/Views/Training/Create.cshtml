@model Shared.Dtos.Trainings.TrainingDto

@using Client.Core.HtmlHelpers
@using Shared.Core.Constants
@using Shared.I18n.Constants

@{
    ViewBag.Title = Html.LocalizedDisplay(MessageKeyConstants.LABEL_TRAINING);
}

@section header{
    <div class="header-section-title">
        <h1><i class="@HtmlConstants.FA_IMAGE_TRAINING"></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_TRAINING)</h1>
        <small>@Html.LocalizedDisplay(MessageKeyConstants.LABEL_TRAINING)</small>
    </div>
    <img src="/Content/images/admin/admin-cover.jpg" />
}

@section breadcrumb {
    <ul class="breadcrumb">
        <li>@Html.LocalizedDisplay(MessageKeyConstants.LABEL_HOME)</li>
        <li>@Html.LocalizedActionLink(MessageKeyConstants.LABEL_TRAINING, WebConstants.VIEW_INDEX, WebConstants.CONTROLLER_TRAINING)</li>
    </ul>
}

<div class="panel">
    <div class="panel-heading">
        <ul class="nav nav-tabs remoteTabs">
            <li class="active"><a href="#form" data-toggle="tab"><i class='fa fa-pencil'></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_FILL_FORM)</a></li>
        </ul>
    </div>
    <div class="panel-body">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    if (Model.Id != Guid.Empty)
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreatedDate)
        @Html.HiddenFor(model => model.UserCreatorId)
    }
    <div class="form-horizontal">
        @Html.CustomValidationSummary()
        <div class="form-group">
            @Html.LabelFor(model => model.TimeStart, new { @class = "control-label col-sm-2 form-control-title form-control-required" })
            <div class="col-sm-4">
                @Html.InlineEditableControl(Html.EditableLabelFor(model => model.TimeStart, new { @class = "form-control-editable form-control-title" }), Html.EditorFor(model => model.TimeStart, new { htmlAttributes = new { @class = "form-control form-control-title", @data_mask = "99 : 99", @placeholder = "__ : __" } }))
            </div>
            @Html.LabelFor(model => model.TimeEnd, new { @class = "control-label col-sm-2 form-control-title form-control-required" })
            <div class="col-sm-4">
                @Html.InlineEditableControl(Html.EditableLabelFor(model => model.TimeEnd, new { @class = "form-control-editable form-control-title" }), Html.EditorFor(model => model.TimeEnd, new { htmlAttributes = new { @class = "form-control form-control-title", @data_mask = "99 : 99", @placeholder = "__ : __" } }))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Day, new { @class = "control-label col-sm-2 form-control-required" })
            <div class="col-sm-2">
                @Html.InlineEditableControl(Html.LocalizedDropDownDisplayFor(model => model.Day, new { @class = "form-control-editable" }), Html.LocalizedDropDownListFor(model => model.Day, new { @class = "form-control" }))
            </div>
            @Html.LabelFor(model => model.UserReference, new { @class = "control-label col-sm-2 form-control-required" })
            <div class="col-sm-6">
                @Html.InlineEditableControl(Html.ReferenceLabelFor(model => model.UserReference, null, null, new { @class = "form-control-editable" }), @Html.ReferenceFor(model => model.UserReference.Value, "User", "/Admin/User/GetByPrefix", 1))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Address, new { @class = "form-control-editable" }), Html.TextAreaFor(model => model.Address, new { @class = "form-control" }))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-sm-2 form-control-required" })
            <div class="col-sm-5">
                @Html.InlineEditableControl(Html.EditableLabelFor(model => model.City, new { @class = "form-control-editable" }), Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } }))
            </div>
            @Html.LabelFor(model => model.Zipcode, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Zipcode, new { @class = "form-control-editable" }), Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control", @data_mask = "999 99", @placeholder = "___ __" } }))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CountryReference, new { @class = "control-label col-sm-2" })
            <div class="col-sm-5">
                @Html.InlineEditableControl(Html.ReferenceLabelFor(model => model.CountryReference, null, null, new { @class = "form-control-editable" }), @Html.ReferenceFor(model => model.CountryReference.Value, "Country", "/Admin/Country/GetByPrefix", 1))
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12">
                @Html.GoogleMapFor(model => model.Gps, new { @class = "editable", @style = "width: 100%; height: 180px;" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.ForChildren, new { @class = "control-label col-sm-2" })
            <div class="col-sm-1">
                @Html.InlineEditableControl(Html.EditableCheckLabelFor(model => model.ForChildren, new { @class = "form-control-editable" }), @Html.EditorFor(model => model.ForChildren, new { htmlAttributes = new { @class = "form-control" } }))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Description, new { @class = "form-control-editable form-control-textarea" }), Html.RichTextBoxFor(model => model.Description, false))
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <button type="submit" class="btn btn-success pull-right"><i class="fa fa-save"></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_SAVE)</button>
            </div>
        </div>
    </div>
                }
    </div>
</div>